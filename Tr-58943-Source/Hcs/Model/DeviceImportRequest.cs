// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Hcs.Model
{
    public partial class DeviceImportRequest : ITransactionObjectEntity
    {
        public DeviceImportRequest()
        {
            DeviceImportRequestAccounts = new HashSet<DeviceImportRequestAccount>();
            DeviceImportRequestAddresses = new HashSet<DeviceImportRequestAddress>();
            DeviceImportRequestLinkedDevices = new HashSet<DeviceImportRequestLinkedDevice>();
            DeviceImportRequestValues = new HashSet<DeviceImportRequestValue>();
        }

        public long uniqueId { get; set; }
        public Guid TransactionGUID { get; set; }
        [StringLength(32)]
        public string objectId { get; set; }
        [Key]
        public Guid TransportGUID { get; set; }
        public Guid? DeviceVersionGUID { get; set; }
        public byte deviceType { get; set; }
        public byte? individualDeviceType { get; set; }
        [Required]
        [StringLength(50)]
        public string DeviceNumber { get; set; }
        [Required]
        [StringLength(100)]
        public string DeviceStamp { get; set; }
        [Required]
        [StringLength(100)]
        public string DeviceModel { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? InstallationDate { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? CommissioningDate { get; set; }
        public bool RemoteMeteringMode { get; set; }
        [StringLength(2000)]
        public string RemoteMeteringInfo { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? FirstVerificationDate { get; set; }
        [StringLength(20)]
        public string DeviceCalibrationIntervalCode { get; set; }
        public Guid? DeviceCalibrationIntervalGUID { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime FactorySealDate { get; set; }
        public bool TemperatureSensor { get; set; }
        [StringLength(2000)]
        public string TemperatureSensingElementInfo { get; set; }
        public bool PressureSensor { get; set; }
        [StringLength(2000)]
        public string PressureSensingElementInfo { get; set; }
        [StringLength(1)]
        public string InstallationPlace { get; set; }
        public bool? ConsumedVolume { get; set; }

        [InverseProperty(nameof(DeviceImportRequestAccount.DeviceImportTransportGU))]
        public virtual ICollection<DeviceImportRequestAccount> DeviceImportRequestAccounts { get; set; }
        [InverseProperty(nameof(DeviceImportRequestAddress.DeviceImportTransportGU))]
        public virtual ICollection<DeviceImportRequestAddress> DeviceImportRequestAddresses { get; set; }
        [InverseProperty(nameof(DeviceImportRequestLinkedDevice.DeviceImportTransportGU))]
        public virtual ICollection<DeviceImportRequestLinkedDevice> DeviceImportRequestLinkedDevices { get; set; }
        [InverseProperty(nameof(DeviceImportRequestValue.DeviceImportTransportGU))]
        public virtual ICollection<DeviceImportRequestValue> DeviceImportRequestValues { get; set; }
    }
}